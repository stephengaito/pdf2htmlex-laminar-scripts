#!/bin/bash -xe

# This laminar run bash script automates the bulding, local installation, 
# and creation of an AppImage, Debian archive and Docker image for a 
# particular Ubuntu release.

# The `DIST` environment variable is used to specify which Ubuntu release 
# will be used. (The default is `bionic`).

# The `REPO` environment variable is used to determine which pdf2htmlEX 
# github repository to download and build. (The default is 
# `stephengaito/pdf2htmlEX`). 

# The `BRANCH` environment variable is used to determine which 
# branch/tag/commit of pdf2htmlEX to download and build. (The defualt is 
# `master`). 

export LAMINAR_HOME=$PWD

# Make sure that $WORKSPACE/$DIST exists BEFORE docker mounts it
#
mkdir -p $PWORKSPACE/$DIST

# IF we have already been run and built everything... simply exit ;-)
#
if test -f $PWORKSPACE/$DIST/reSourceVersionEnvs ; then
  #
  # Start the next stage...
  #
  laminarc queue testPdf2htmlEX DIST=$DIST PWORKSPACE=$PWORKSPACE
  exit 0
fi

export DIST=${DIST:=bionic}
export REPO=${REPO:=stephengaito/pdf2htmlEX}
export BRANCH=${BRANCH:=updateBuildScripts}

#######################################################################
# We start by creating the script used to control the docker image
#
docker run --rm -i                \
  -v $PWD:/home/dev               \
  -v $PWORKSPACE/$DIST:/workspace \
  -v $ARCHIVE:/archive            \
  -u dev:dev                      \
  -w "/home/dev"                  \
  laminar_$DIST                   <<DOCKER_SCRIPT
set -xe

umask -S

# This bash script is used *inside* a docker image to build pdf2htmlEX.

export DEBIAN_FRONTEND=noninteractive

cd 

git config --global user.name "Stephen Gaito"
git config --global user.email "stephen@perceptisys.co.uk"

# We meed to download pdf2htmlEX
#
git clone https://github.com/$REPO

# Now we start the build process
#
cd pdf2htmlEX

git checkout $BRANCH

umask -S

./buildScripts/buildInstallLocally

umask -S

./buildScripts/createImages

umask -S

# Finally we need to make sure Laminar can eventually clean up this mess...
#
sudo chown -R dev:dev /home/dev

DOCKER_SCRIPT

#######################################################################
# finish docker image (outside of docker image)

cd pdf2htmlEX/buildScripts

source reSourceVersionEnvs

source dockerFunctions

export DOCKER_FROM="ubuntu:$DIST"
export DOCKER_USERNAME=stephengaito

export DOCKER_NAME="$DOCKER_USERNAME/pdf2htmlex:$PDF2HTMLEX_BRANCH-$BUILD_TIME"

echo "export DOCKER_FROM=\"$DOCKER_FROM\""         >> reSourceVersionEnvs
echo "export DOCKER_USERNAME=\"$DOCKER_USERNAME\"" >> reSourceVersionEnvs
echo "export DOCKER_NAME=\"$DOCKER_NAME\""         >> reSourceVersionEnvs

cd $LAMINAR_HOME

docker run --rm -i           \
  -v $LAMINAR_HOME:/home/dev \
  $DOCKER_FROM               <<BLACK_LIST_FILES
set -ex

find / -iname "*.so.*" -path /home/dev -prune -o                          \
  | xargs -i basename {} | sed 's/\r//g' | sed 's/\(so\.[0-9]\+\).*$/\1/' \
  | sort | uniq > /home/dev/blackListedFiles

find / -iname "*.so.*" -path /home/dev -prune -o   \
  | sed 's/\r//g' | sed 's/\(so\.[0-9]\+\).*$/\1/' \
  | sort | uniq > /home/dev/blackListedPaths

chown 4242:4242 /home/dev/blackListedFiles
chown 4242:4242 /home/dev/blackListedPaths

BLACK_LIST_FILES

cd pdf2htmlEX/imageBuild/dockerDir

for FILE in $(cat $LAMINAR_HOME/blackListedFiles | tr "\r\n" "  ") ; do
  FILES="$(find . -name "${FILE}*" -not -path "./usr/optional/*")"
  for FOUND in $FILES ; do
    rm -vf "$FOUND" "$(readlink -f "$FOUND")"
  done
done

# Do not bundle developer stuff
rm -rf usr/include || true
rm -rf usr/lib/cmake || true
rm -rf usr/lib/pkgconfig || true
find . -name '*.la' | xargs -i rm {}

cat > Dockerfile <<DOCKERFILE_HERE_DOC
FROM $DOCKER_FROM

COPY ./ /

RUN ldconfig

ARG DEBIAN_FRONTEND=noninteractive

RUN apt update && \
  apt -y upgrade && \
  apt -y --no-install-recommends install libfontconfig1

ENTRYPOINT ["$PDF2HTMLEX_PREFIX/bin/pdf2htmlEX"]

DOCKERFILE_HERE_DOC

cd ..

docker build -t $DOCKER_NAME dockerDir


cp $APPIMAGE_NAME $PWORKSPACE/$DIST
cp $DPKG_NAME     $PWORKSPACE/$DIST

cd ../buildScripts

cp reSourceVersionEnvs $PWORKSPACE/$DIST

cd $LAMINAR_HOME

# Start the next stage...
#
laminarc queue testPdf2htmlEX DIST=$DIST PWORKSPACE=$PWORKSPACE
